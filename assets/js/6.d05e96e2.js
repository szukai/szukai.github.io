(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{256:function(s,e,t){"use strict";t.r(e);var a=t(31),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"activities-guide-fetching-receiving"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-guide-fetching-receiving"}},[s._v("#")]),s._v(" Activities Guide: Fetching & Receiving")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#overview"}},[s._v("Overview")])]),t("li",[t("a",{attrs:{href:"#property-values"}},[s._v("Property Values")])]),t("li",[t("a",{attrs:{href:"#fetch-based-activities"}},[s._v("Fetch-based Activities")]),t("ul",[t("li",[t("a",{attrs:{href:"#activities-checkpoint-get-from-timestamp"}},[s._v("activities.checkpoint.get_from_timestamp")])]),t("li",[t("a",{attrs:{href:"#activities-events-compose-operation"}},[s._v("activities.events.compose_operation")])]),t("li",[t("a",{attrs:{href:"#activities-events-query"}},[s._v("activities.events.query")])]),t("li",[t("a",{attrs:{href:"#activities-events-parse"}},[s._v("activities.events.parse")])]),t("li",[t("a",{attrs:{href:"#activities-events-append-parsed"}},[s._v("activities.events.append_parsed")])]),t("li",[t("a",{attrs:{href:"#activities-checkpoint-get-new-checkpoint"}},[s._v("activities.checkpoint.get_new_checkpoint")])]),t("li",[t("a",{attrs:{href:"#activities-events-post-process"}},[s._v("activities.events.post_process")])])])]),t("li",[t("a",{attrs:{href:"#webhook-based-activities"}},[s._v("Webhook-based Activities")]),t("ul",[t("li",[t("a",{attrs:{href:"#registering-webhook-urls"}},[s._v("Registering webhook urls")])]),t("li",[t("a",{attrs:{href:"#activities-subscription-settings-initialize"}},[s._v("activities.subscription_settings.initialize")])]),t("li",[t("a",{attrs:{href:"#activities-subscription-settings-refresh"}},[s._v("activities.subscription_settings.refresh")])]),t("li",[t("a",{attrs:{href:"#activities-subscription-settings-cleanup"}},[s._v("activities.subscription_settings.cleanup")])]),t("li",[t("a",{attrs:{href:"#receiving-webhook-notifications"}},[s._v("Receiving webhook notifications")])]),t("li",[t("a",{attrs:{href:"#activities-notifications-parse-identifiers"}},[s._v("activities.notifications.parse_identifiers")])]),t("li",[t("a",{attrs:{href:"#activities-notifications-verify-signature"}},[s._v("activities.notifications.verify_signature")])]),t("li",[t("a",{attrs:{href:"#activities-notifications-parse-activity"}},[s._v("activities.notifications.parse_activity")])]),t("li",[t("a",{attrs:{href:"#activities-notifications-append-parsed"}},[s._v("activities.notifications.append_parsed")])]),t("li",[t("a",{attrs:{href:"#activities-notifications-post-process"}},[s._v("activities.notifications.post_process")])])])]),t("li",[t("a",{attrs:{href:"#hybrid-activities"}},[s._v("Hybrid Activities")])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[s._v("#")]),s._v(" Overview")]),s._v(" "),t("p",[s._v("There are currently two types of supported activity monitoring mechanisms:\nfetch-based and webhook-based. Webhook-based activities are quite popular\namong different services and provide endpoints for registering a callback url,\nthat send activity notification requests to the platform. Services using\nfetch-based activity monitoring provide activity endpoints for our platform to\nquery based on time or specific snapshot token.")]),s._v(" "),t("h2",{attrs:{id:"property-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#property-values"}},[s._v("#")]),s._v(" Property Values")]),s._v(" "),t("p",[s._v("To implement activity monitoring, these property values need to be specified\nin the "),t("a",{attrs:{href:"/reference/kspec-ref"}},[s._v("KSpec")]),s._v(" file first:")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("features")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Always required")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("activities.implementation_approach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" script\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add these three when using fetch-based mechanism")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("events.events.persistence")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("admin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" not"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("required\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("events.events.synchronous")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("admin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" supported\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("activities.events.from_endpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("admin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" supported\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[t("code",[s._v("activities.implementation_approach")]),s._v(" indicates that the activity handling\nbehavior is defined in a script. If it is not defined, it will fall\nto the default behavior. The current default activity monitoring behavior\ndoes essentially nothing.")]),s._v(" "),t("p",[s._v("If implementing fetch-based activity monitoring,\n"),t("code",[s._v("events.events.persistence: not-required")]),s._v(" and\n"),t("code",[s._v("events.events.synchronous: supported")]),s._v(" are a required. This combination\nindicates that the upstream activity objects are queried synchronously on\ndemand without saving to the database. Kloudless is currently moving away from\nthe database approach.")]),s._v(" "),t("p",[t("code",[s._v("events.events.persistence")]),s._v(" specifies if processed activity objects should\npersist (be stored) in the database for later query.")]),s._v(" "),t("p",[t("code",[s._v("events.events.synchronous")]),s._v(" specifies if the service connector has synchronous\nquery support implemented.")]),s._v(" "),t("p",[s._v("In contrast, services using webhook-based activity monitoring require\n"),t("code",[s._v("events.events.persistence: required")]),s._v(" and\n"),t("code",[s._v("events.events.synchronous: no-vendor")]),s._v(". If "),t("code",[s._v("events.events.synchronous")]),s._v(" is\nomitted, the default value would be the same as specifying it to "),t("code",[s._v("no-vendor")]),s._v("\n(Not supported by vendor).")]),s._v(" "),t("p",[s._v("Webhook requests can come in either one at a time or in small batches. In this\ncase parsed activity objects need to be stored in the database first as it will\nbe impossible to query them synchronously from the upstream service.")]),s._v(" "),t("p",[t("code",[s._v("activities.events.from_endpoints")]),s._v(" specifies whether activity objects come from\nupstream endpoints. Its value should always be "),t("code",[s._v("supported")]),s._v(" for fetch-based\nonly services, or "),t("code",[s._v("no-vendor")]),s._v(" for webhook-based only services.")]),s._v(" "),t("h2",{attrs:{id:"fetch-based-activities"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fetch-based-activities"}},[s._v("#")]),s._v(" Fetch-based Activities")]),s._v(" "),t("p",[s._v("The following diagram describes the flow of fetch-based activity queries:\n"),t("img",{attrs:{src:"/cc-fetch-activity-flow-diagram.png",alt:"Fetch-based Activity Flow"}})]),s._v(" "),t("p",[s._v("A request from the Kloudless platform (Platform) through the Custom Connector\npython script (Script) are sent to the upstream service. The flow arrows\nare labeled with property names that each function should be registered with.")]),s._v(" "),t("p",[s._v("This entire flow is combined through multiple hook functions while the main\nlogic remains on the Kloudless platform. It will loop to fetch all pages of\nactivity objects from the upstream service endpoints.\nEach function has its own purpose. Brief descriptions below:")]),s._v(" "),t("h3",{attrs:{id:"activities-checkpoint-get-from-timestamp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-checkpoint-get-from-timestamp"}},[s._v("#")]),s._v(" activities.checkpoint.get_from_timestamp")]),s._v(" "),t("p",[s._v("Given a "),t("code",[s._v("from_time")]),s._v(" and optional "),t("code",[s._v("until_time")]),s._v(" from the list activity objects\nrequest, return a dictionary "),t("code",[s._v("checkpoint")]),s._v(" value. Kloudless uses this value as\na progress marker for activity monitoring later in the\n"),t("code",[s._v("activities.events.compose_operation")]),s._v(" function.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('{\n    "from_time": (float),\n    "until_time": (float|None),\n    "subscription_settings": (dict),\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    # custom dict contents\n    ...\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"activities-events-compose-operation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-events-compose-operation"}},[s._v("#")]),s._v(" activities.events.compose_operation")]),s._v(" "),t("p",[s._v("Compose a list of operation data as list of dicts. Each dict contains the\nupstream request information: operation ID, query parameter values, and\nheaders.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('{\n    "checkpoint": (dict),\n    "extra_data": (dict),\n    "has_more": [(bool)],\n    "page_size": (int),\n    "subscription_id": (int)\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('[\n    {\n        "operation": (str)(required),\n        "parameters": (dict),\n        "headers": (dict)\n    }\n]\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v('If multiple activity sources are used, and only a portion of them\nare exhausted, their operation dicts should still present in the response,\nbut with "operation" set to '),t("code",[s._v("None")]),s._v(". For example,")]),s._v(" "),t("div",{staticClass:"language-py line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-py"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"operation"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"get_activities_source_1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parameters"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cursor"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"...cursor string..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"page_size"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"operation"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("The above shows there are two activity sources, the first one still has next\npages, while the second one doesn't have any more.")])]),s._v(" "),t("h3",{attrs:{id:"activities-events-query"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-events-query"}},[s._v("#")]),s._v(" activities.events.query")]),s._v(" "),t("p",[s._v("Optional. The default behavior is to send out concurrent requests with\ngreenlets based on the operation data provided. And return a list of tuples\n(response_data, response_body). Only override this function when the default\nbehavior does not meet your requirements.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('[\n    {\n        "operation": (str),\n        "parameters": (dict),\n        "headers": (dict)\n    }\n]\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[\n    {\n        'response_meta': {'success': (bool)},\n        'response': (requests.Response object)\n    }\n]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("If overriding this function is required, notice the operation dicts are the\nsame as the response from the previous "),t("code",[s._v("compose_operation")]),s._v(' function. This means\n"operation" would be '),t("code",[s._v("None")]),s._v(" for sources that don't have anymore pages.\nTo handle these empty operations, provide "),t("code",[s._v("response_meta")]),s._v(" values with\nan indicator that's easily recognizable in the following "),t("code",[s._v("parse")]),s._v(" function.")]),s._v(" "),t("p",[s._v("For example, the default implementation would provide an "),t("code",[s._v("'exhausted': True")]),s._v("\nin "),t("code",[s._v("response_meta")]),s._v(" to indicate that a source doesn't have anymore page:")]),s._v(" "),t("div",{staticClass:"language-py line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-py"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response_meta'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'success'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'exhausted'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'response'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("h3",{attrs:{id:"activities-events-parse"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-events-parse"}},[s._v("#")]),s._v(" activities.events.parse")]),s._v(" "),t("p",[s._v("Parse the query's raw response into a unified activity dict format.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'responses': [\n        {\n            'response_meta': {'success': (bool)},\n            'response': (requests Response object)\n        }\n    ],\n    extra_data: (dict)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'results': [\n        [(parsed activity dict)]\n    ]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("If there are multiple activity sources, please refer to the note from the above\n"),t("code",[s._v("query")]),s._v(' to recognize exhausted sources\' "response_meta". And provide empty\nlists '),t("code",[s._v("[]")]),s._v(" in their corresponding positions in results.")])]),s._v(" "),t("h3",{attrs:{id:"activities-events-append-parsed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-events-append-parsed"}},[s._v("#")]),s._v(" activities.events.append_parsed")]),s._v(" "),t("p",[s._v("Optional. Aggregates parsed activities from each activities page response\ndictionary. The default behavior for this function is to append each results\ndictionary. It is possible to override this to prepend or use a sorted merge\nif required.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'activities_lists': [\n        [\n            {...(activity dict from previous page)...}\n        ]\n    ],\n    'parsed_activities': [\n        [\n            {...(newly parsed activity dict)...}\n        ]\n    ]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'results': [\n        [(activity dict)]\n    ]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"activities-checkpoint-get-new-checkpoint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-checkpoint-get-new-checkpoint"}},[s._v("#")]),s._v(" activities.checkpoint.get_new_checkpoint")]),s._v(" "),t("p",[s._v("Compose a new checkpoint dict for the next page requests. If there are no\nmore pages left to query, an indication will be made ("),t("code",[s._v("has_more")]),s._v(" will be\nfalse).")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'checkpoint': (dict),\n    'extra_data': (dict),\n    'operation_data': [(dict)],\n    'raw_responses': [(dict)],\n    'activities_lists': [\n        [(dict)]\n    ]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'checkpoint': (dict)(required),\n    'has_more': [(bool)](required)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"activities-events-post-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-events-post-process"}},[s._v("#")]),s._v(" activities.events.post_process")]),s._v(" "),t("p",[s._v("Optional. By default, the activities post-processing will merge-sort the\naggregated activities list. This can be overridden if required.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[\n    [(parsed activity dict)]\n]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'results': [(processed activity dict)](required)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"webhook-based-activities"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webhook-based-activities"}},[s._v("#")]),s._v(" Webhook-based Activities")]),s._v(" "),t("p",[s._v("The following diagram describes the flow for registering a webhook url to the\nupstream service:\n"),t("img",{attrs:{src:"/cc-webhook-register-flow-diagram.png",alt:"Webhook-based Registering Flow"}})]),s._v(" "),t("p",[s._v("This diagram describes the flow for receiving webhook notifications from\nthe upstream service:\n"),t("img",{attrs:{src:"/cc-webhook-notification-flow-diagram.png",alt:"Webhook-based Receiving Flow"}})]),s._v(" "),t("h3",{attrs:{id:"registering-webhook-urls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#registering-webhook-urls"}},[s._v("#")]),s._v(" Registering webhook urls")]),s._v(" "),t("h3",{attrs:{id:"activities-subscription-settings-initialize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-subscription-settings-initialize"}},[s._v("#")]),s._v(" activities.subscription_settings.initialize")]),s._v(" "),t("p",[s._v("This function is triggered when first creating a subscription resource, or\nwhen the latest "),t("code",[s._v("checkpoint")]),s._v(" dict is empty.")]),s._v(" "),t("p",[s._v("For some services, the developer only needs to implement the code to register\na webhook url with the activity types to subscribe to. Otherwise, for some\nother services, the webhooks may be registered for each folder. The developer\nwould then just need the code to scan these folders, and compare the result\nwith a previous snapshot to register and de-register webhooks for new and\ndeleted folders.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("None\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'checkpoint': (dict)(required),\n    'extra_data': (dict),\n    'expiry': (float|datetime),\n    'monitored_resources': [(str)],\n    'monitored_resource_object_type': (str),\n    'monitored_resource_api': (str),\n    'token': (str),\n    'ident': (str)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h3",{attrs:{id:"activities-subscription-settings-refresh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-subscription-settings-refresh"}},[s._v("#")]),s._v(" activities.subscription_settings.refresh")]),s._v(" "),t("p",[s._v("As subscription resources are created with expiration times, the Kloudless\nplatform will trigger a refresh function to renew or refresh the\nsubscription resources before the time is up, the developer can specify\nthe necessary updates and actions (e.g. rescanning folders).")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'checkpoint': (dict),\n    'extra_data': (dict),\n    'expiry': (float|datetime),\n    'monitored_resources': [(str)],\n    'monitored_resource_object_type': (str),\n    'monitored_resource_api': (str),\n    'token': (str),\n    'ident': (str)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'checkpoint': (dict)(required),\n    'extra_data': (dict),\n    'expiry': (float|datetime),\n    'monitored_resources': [(str)],\n    'monitored_resource_object_type': (str),\n    'monitored_resource_api': (str),\n    'token': (str),\n    'ident': (str)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h3",{attrs:{id:"activities-subscription-settings-cleanup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-subscription-settings-cleanup"}},[s._v("#")]),s._v(" activities.subscription_settings.cleanup")]),s._v(" "),t("p",[s._v("This function is not in the flow diagram above. This function triggers if an\naccount is being deleted, cleanup actions can be processed here. For example,\nthe developer can remove previously registered webhooks in this function.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'ident': (str),\n    'token': (str),\n    'purpose': (str),\n    'monitored_resources': [(str)],\n    'extra_data': (dict),\n    'force': (bool),\n    'extra_kwargs': (dict)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'success': True\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"receiving-webhook-notifications"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#receiving-webhook-notifications"}},[s._v("#")]),s._v(" Receiving webhook notifications")]),s._v(" "),t("h3",{attrs:{id:"activities-notifications-parse-identifiers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-notifications-parse-identifiers"}},[s._v("#")]),s._v(" activities.notifications.parse_identifiers")]),s._v(" "),t("p",[s._v("When the Kloudless platform receives a webhook request, it won't know which\naccounts it belongs to. This function allows the developer to provide\nidentifiers for the Kloudless platform to locate the correct subscription\nsettings to map activities to the correct accounts.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'body': (str),\n    'headers': (dict),\n    'query_parameters': (dict),\n    'app_key': (str),\n    'type': \"identifiers_from_notification\",\n    'extra_kwargs': (dict)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[t("code",[s._v("app_key")]),s._v(" is the last path variable from the webhooks URL provided to the\nservice, ex. "),t("code",[s._v("https://api.kloudless.com/services/kapost/<app_key>")]),s._v(".\nThis webhook URL is typically generated in\n"),t("code",[s._v("activities.subscription_settings.initialize")]),s._v(" when registering webhooks\nto the service, or configured in the service's admin UI. While most services\nin the platform put the service key (client ID) here, it is also possible to\nuse a different identifier if a better option is available.")])]),s._v(" "),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[\n    {\n        'account_id': (str),\n        'token': (str),\n        'service_key': (str),\n        'ident': (str),\n        'extra_data': (dict)\n    }\n]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("Developers only need to provide enough identifiers for the platform to locate\nthe correct subscription settings. For example, if 'ident' alone can achieve\nthat, other properties like 'token', 'account_id', or "),t("code",[s._v("service_key")]),s._v(" can be\nleft blank.")])]),s._v(" "),t("h3",{attrs:{id:"activities-notifications-verify-signature"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-notifications-verify-signature"}},[s._v("#")]),s._v(" activities.notifications.verify_signature")]),s._v(" "),t("p",[s._v("If the service provides a way to verify the signature from the request headers\nor the request body, the developer can implement it in this function. It\nshould raise an exception if it receives a false signature.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'body': (str),\n    'headers': (dict),\n    'query_parameters': (dict),\n    'app_key': (str),\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'success': True\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"activities-notifications-parse-activity"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-notifications-parse-activity"}},[s._v("#")]),s._v(" activities.notifications.parse_activity")]),s._v(" "),t("p",[s._v("Parse the raw activity from the request to the Kloudless platform activity\nobject format.")]),s._v(" "),t("p",[s._v("After activity objects are parsed, they are collected and passed on together to\neither the application webhook or the database for the list activity objects\nendpoint to query.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{...(raw activity dict)...}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    # Common between v1 and v2\n    'event_id': (str),\n    'event_time': (float|datetime)(required),\n    'raw_data': {'object': (dict)},\n\n    # v1 properties\n    'data': (dict),\n    'event_type': (str),\n    'ip': (str),\n\n    # v2 properties\n    'unified_event_type': (str)(required),\n    'event_category': (str),\n    'event_subtype': (str),\n    'actor': (dict),\n    'targets': [(dict)],\n    'previous_targets': [(dict)],\n    'metadata_list': [(dict)],\n    'session': (dict),\n    'stream': (str),\n    'impersonate_for_target': (str)\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("h3",{attrs:{id:"activities-notifications-append-parsed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-notifications-append-parsed"}},[s._v("#")]),s._v(" activities.notifications.append_parsed")]),s._v(" "),t("p",[s._v("Append the parsed notification activity into the parsed activity objects\ncollection.")]),s._v(" "),t("p",[s._v("The default behavior for this function is to append the notification activity\nto the bottom of the activity objects collection. Overriding this function allows\nyou to insert or prepend the activity instead if required.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'newly_parsed': (dict),\n    'results': [(dict)]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'results': [(dict)]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"activities-notifications-post-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activities-notifications-post-process"}},[s._v("#")]),s._v(" activities.notifications.post_process")]),s._v(" "),t("p",[s._v("After activity objects are parsed and collected, the developer can execute any\nrequired post-processing in this function before the activity results sent\nback to platform. Some examples for post-processing actions include filtering\naway non-essential activity objects or inserting extra information.")]),s._v(" "),t("p",[s._v("Request schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'results': [(dict)]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("Response schema:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    'results': [(dict)]\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"hybrid-activities"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hybrid-activities"}},[s._v("#")]),s._v(" Hybrid Activities")]),s._v(" "),t("p",[s._v("Some services may use both fetch-based and webhook-based endpoints for\ndifferent types of activity objects. In this case the property values should\nbe set as the following:")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("features")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Always required")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("activities.implementation_approach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" script\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("events.events.persistence")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("admin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" required\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("events.events.synchronous")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("admin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("vendor\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("activities.events.from_endpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("admin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" supported\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("The "),t("code",[s._v("events.events.persistence")]),s._v(" property is set to "),t("code",[s._v("True")]),s._v(" and\n"),t("code",[s._v("events.events.synchronous")]),s._v(" is set to "),t("code",[s._v("no-vendor")]),s._v(" so that both fetch-based and\nwebhook-based activity objects go into database and can be queried with list\nactivity objects request to the Kloudless platform.")]),s._v(" "),t("p",[s._v("All that's left is to implement the previously mentioned property functions and\nbehaviors for both fetch-based and webhook-based activity monitoring\nmechanisms.")])])}),[],!1,null,null,null);e.default=n.exports}}]);